services:
  postgres:
    image: postgres:15-alpine
    container_name: 1001-stories-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: stories_db
      POSTGRES_USER: stories_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-stories_password_123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    # ports:
      # - "5434:5432"  # SECURITY: Database port removed - use container networking
    networks:
      - app-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stories_user -d stories_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: 1001-stories-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_123}
    volumes:
      - redis_data_dev:/data
    # ports:
      # - "6380:6379"  # SECURITY: Redis port removed - use container networking
    networks:
      - app-network-dev
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network-dev:
    driver: bridge

volumes:
  postgres_data_dev:
  redis_data_dev: