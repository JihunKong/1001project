# Nginx configuration for test environment
# Optimized for E2E testing with SSL support

worker_processes auto;
worker_rlimit_nofile 1024;

events {
    worker_connections 512;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings optimized for testing
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    server_tokens off;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    # SSL Configuration for Test Environment
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;

    # Security headers for testing
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Rate limiting for test environment
    limit_req_zone $binary_remote_addr zone=test_limit:10m rate=50r/m;
    limit_conn_zone $binary_remote_addr zone=test_conn:10m;

    # Upstream for Next.js application
    upstream nextjs_backend {
        server test-app:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name _;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # Main HTTPS server for testing
    server {
        listen 443 ssl http2;
        server_name localhost;

        # SSL certificates for testing (self-signed)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:TestSSL:50m;
        ssl_stapling off; # Disabled for self-signed certs

        # Rate limiting
        limit_req zone=test_limit burst=20 nodelay;
        limit_conn test_conn 20;

        # Security headers specific to test environment
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self'; connect-src 'self' ws: wss:;" always;
        add_header X-Test-Environment "true" always;

        # Root location - proxy to Next.js
        location / {
            proxy_pass http://nextjs_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts for testing
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # API routes optimization
        location /api/ {
            proxy_pass http://nextjs_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Shorter timeout for API calls in tests
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Disable buffering for API responses
            proxy_buffering off;
        }

        # Static assets with caching for tests
        location /_next/static/ {
            proxy_pass http://nextjs_backend;
            proxy_cache_valid 200 5m; # Short cache for testing
            add_header Cache-Control "public, immutable, max-age=300";
        }

        # Public assets
        location /public/ {
            proxy_pass http://nextjs_backend;
            proxy_cache_valid 200 1m;
            add_header Cache-Control "public, max-age=60";
        }

        # Favicon
        location = /favicon.ico {
            proxy_pass http://nextjs_backend;
            proxy_cache_valid 200 1h;
            access_log off;
        }

        # Test-specific endpoints
        location /test-health {
            access_log off;
            return 200 "test environment healthy\n";
            add_header Content-Type text/plain;
            add_header X-Test-Health "ok";
        }

        # WebSocket support for development tools
        location /ws {
            proxy_pass http://nextjs_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Server for test utilities (if needed)
    server {
        listen 8080;
        server_name localhost;
        
        location / {
            return 200 "Test utilities server\n";
            add_header Content-Type text/plain;
        }
        
        # Endpoint for test status
        location /test-status {
            access_log off;
            return 200 '{"status":"ok","environment":"test","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }
}

# Test environment specific configurations
# This file is used specifically for containerized testing