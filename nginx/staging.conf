# 1001 Stories - Nginx Staging Configuration
# ==========================================
# Staging environment configuration with self-signed SSL
# Optimized for role system testing and safe deployment validation

worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker connections optimized for staging
events {
    worker_connections 512;  # Lower than production
    use epoll;
    multi_accept on;
}

http {
    # Basic Configuration
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging Configuration - Enhanced for staging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format staging '$time_iso8601 [STAGING] $remote_addr "$request" $status '
                      '$request_time $upstream_response_time "$http_user_agent"';
    
    access_log /var/log/nginx/access.log staging;
    error_log /var/log/nginx/error.log debug;  # Debug level for staging
    
    # Performance Configuration - Staging optimized
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;  # Shorter than production
    keepalive_requests 50;
    client_max_body_size 10M;  # For file uploads
    client_body_timeout 30s;
    client_header_timeout 30s;
    
    # Gzip Configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Security Headers - Staging specific
    add_header X-Staging-Environment "true" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate Limiting - More permissive for staging
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    
    # Upstream Configuration - Staging app
    upstream staging_app {
        server app-staging:3000;
        keepalive 8;
        keepalive_time 1h;
        keepalive_timeout 60s;
    }
    
    # HTTP Server - Redirect to HTTPS
    server {
        listen 80;
        server_name localhost;
        
        # Health check endpoint for load balancer
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            add_header X-Staging-Health "ok" always;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS Server - Main staging configuration
    server {
        listen 443 ssl http2;
        server_name localhost;
        
        # SSL Configuration - Self-signed for staging
        ssl_certificate /etc/nginx/ssl/staging.crt;
        ssl_private_key /etc/nginx/ssl/staging.key;
        
        # SSL Security Configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP Stapling disabled for self-signed certificates
        # ssl_stapling off;
        # ssl_stapling_verify off;
        
        # Security Headers for HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Staging-SSL "self-signed" always;
        
        # Main Application - Role System Testing
        location / {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy configuration
            proxy_pass http://staging_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Staging-Request "true";
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer configuration
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Cache bypass
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_upgrade;
        }
        
        # API Routes - Enhanced monitoring for role system
        location /api/ {
            # Stricter rate limiting for API
            limit_req zone=api burst=10 nodelay;
            
            # Enhanced logging for role system testing
            access_log /var/log/nginx/api.log staging;
            
            proxy_pass http://staging_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Staging-API "true";
            
            # Longer timeouts for migration operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Authentication endpoints - Special handling
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            
            # Special logging for auth testing
            access_log /var/log/nginx/auth.log staging;
            
            proxy_pass http://staging_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Staging-Auth "true";
            
            # Secure cookie settings for staging
            proxy_cookie_path / "/; HttpOnly; Secure; SameSite=Strict";
        }
        
        # Static Assets - Staging optimized
        location /static/ {
            expires 1h;  # Shorter cache for staging
            add_header Cache-Control "public, no-transform";
            add_header X-Staging-Static "true" always;
            
            # Try files first, then proxy to app
            try_files $uri @staging_app;
        }
        
        # Books and media files
        location /books/ {
            expires 30m;  # Shorter cache for staging
            add_header X-Staging-Media "true" always;
            
            proxy_pass http://staging_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health Check - Enhanced for staging
        location /health {
            access_log off;
            proxy_pass http://staging_app/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Health-Check "nginx-staging";
            
            # Quick timeouts for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            
            add_header X-Staging-Health "proxy" always;
        }
        
        # Monitoring endpoints (if monitoring profile is enabled)
        location /metrics {
            # Restrict to local access only
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker networks
            deny all;
            
            proxy_pass http://staging_app/api/metrics;
            proxy_set_header Host $host;
            add_header X-Staging-Metrics "true" always;
        }
        
        # pgAdmin access (if admin profile is enabled)
        location /pgadmin/ {
            # Restrict to local access
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
            
            proxy_pass http://pgadmin-staging:80/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle redirects properly
            proxy_redirect ~^/(.*)$ /pgadmin/$1;
        }
        
        # Security: Block sensitive files
        location ~ /\.(git|env|htaccess|htpasswd) {
            deny all;
            return 404;
        }
        
        # Security: Block backup files
        location ~ \.(bak|backup|old|orig|save)$ {
            deny all;
            return 404;
        }
        
        # Fallback for unmatched locations
        location @staging_app {
            proxy_pass http://staging_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Staging-Fallback "true";
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
            add_header X-Staging-Error "true" always;
        }
        
        location = /404.html {
            root /usr/share/nginx/html;
            add_header X-Staging-404 "true" always;
        }
    }
}

# Additional configuration for staging monitoring
# Stream block for TCP/UDP proxy if needed
stream {
    # PostgreSQL proxy for external access (development only)
    upstream postgres_staging {
        server postgres-staging:5432;
    }
    
    server {
        listen 5434;
        proxy_pass postgres_staging;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/postgres_proxy.log;
    }
    
    # Redis proxy for external access (development only)
    upstream redis_staging {
        server redis-staging:6379;
    }
    
    server {
        listen 6380;
        proxy_pass redis_staging;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/redis_proxy.log;
    }
}