# Test-specific Dockerfile with debugging capabilities
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat \
    chromium \
    firefox-esr \
    webkit2gtk \
    harfbuzz \
    nss \
    freetype \
    freetype-dev \
    ttf-freefont \
    font-noto-emoji \
    wqy-zenhei \
    bash \
    curl \
    wget

# Set up Chrome/Chromium environment variables
ENV CHROME_BIN=/usr/bin/chromium-browser \
    CHROME_PATH=/usr/bin/chromium-browser \
    CHROMIUM_FLAGS="--disable-software-rasterizer --disable-dev-shm-usage"

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY prisma ./prisma/

# Install dependencies including dev dependencies for testing
RUN npm ci && \
    npx prisma generate && \
    npx playwright install-deps

# Copy application code
COPY . .

# Build the application in test mode
ENV NODE_ENV=test
ENV NEXT_TELEMETRY_DISABLED=1

# Build Next.js application
RUN npm run build

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Create necessary directories with proper permissions
RUN mkdir -p /app/test-artifacts /app/test-results /app/playwright-report && \
    chown -R nextjs:nodejs /app

# Install Playwright browsers as the nextjs user
USER nextjs
RUN npx playwright install chromium firefox webkit

# Expose ports
EXPOSE 3000 9229

# Health check endpoint
HEALTHCHECK --interval=10s --timeout=5s --start-period=30s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"

# Start application with debugging enabled
CMD ["node", "--inspect=0.0.0.0:9229", "node_modules/.bin/next", "start"]