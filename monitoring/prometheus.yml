# Prometheus configuration for 1001 Stories
# Educational platform monitoring setup

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: '1001-stories-monitor'
    environment: 'production'

# Alertmanager configuration (optional)
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#           - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*|promhttp_.*'
        action: drop  # Drop Go runtime and HTTP handler metrics to save space

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # Next.js Application metrics (if implemented)
  - job_name: '1001-stories-app'
    static_configs:
      - targets: ['app:3000']
    scrape_interval: 30s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    honor_labels: false

  # PostgreSQL metrics via postgres_exporter (optional)
  # - job_name: 'postgres'
  #   static_configs:
  #     - targets: ['postgres-exporter:9187']
  #   scrape_interval: 30s

  # Redis metrics via redis_exporter (optional)
  # - job_name: 'redis'
  #   static_configs:
  #     - targets: ['redis-exporter:9121']
  #   scrape_interval: 30s

  # Docker container metrics via cAdvisor (optional)
  # - job_name: 'cadvisor'
  #   static_configs:
  #     - targets: ['cadvisor:8080']
  #   scrape_interval: 30s

  # Nginx metrics via nginx-prometheus-exporter (optional)
  # - job_name: 'nginx'
  #   static_configs:
  #     - targets: ['nginx-exporter:9113']
  #   scrape_interval: 30s

# Storage optimization: retention settings are configured in docker-compose.yml
# via --storage.tsdb.retention.time and --storage.tsdb.retention.size flags

# Remote write configuration for external monitoring (optional)
# remote_write:
#   - url: "https://your-remote-monitoring-service/api/v1/write"
#     basic_auth:
#       username: your-username
#       password: your-password